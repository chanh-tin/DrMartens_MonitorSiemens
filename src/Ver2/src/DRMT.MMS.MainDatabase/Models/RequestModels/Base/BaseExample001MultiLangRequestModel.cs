// -----------------------------------------------------------------------------
// This file was automatically generated.
// Please do not edit this file manually.
//
// Generated Date: 
//
// -----------------------------------------------------------------------------

using iSoft.Common.Utils;
using Microsoft.AspNetCore.Http;
using SourceBaseBE.Database.Entities;
using static iSoft.Common.ConstCommon;
using iSoft.Common;
using iSoft.Database.Models.RequestModels.Base.BaseCRUD;
using SourceBaseBE.Database.Enums;
using iSoft.Common.Enums;
using Newtonsoft.Json;

namespace SourceBaseBE.Database.Models.RequestModels
{
    public class BaseExample001MultiLangRequestModel : BaseExample001RequestModel
    {
        private List<Example001TransRequestModel> _listTransData = new List<Example001TransRequestModel>();
        private string _translateFormDatas = "";
        public string TranslateFormDatas
        {
            get
            {
                return _translateFormDatas;
            }
            set
            {
                _translateFormDatas = value;

                _listTransData.Clear();

                if (!string.IsNullOrEmpty(_translateFormDatas))
                {
                    _listTransData = JsonConvert.DeserializeObject<List<Example001TransRequestModel>>(_translateFormDatas);
                }
            }
        }
        public List<Example001TransRequestModel> GetListTransData()
        {
            return _listTransData;
        }
        public override Example001Entity GetEntity(Example001Entity entity)
        {
            var entityRS = base.GetEntity(entity);

            var dicCurrentTransEntity = entityRS.ListExample001Trans.ToDictionary(x => x.Lang, x => x);

            foreach (var transRequestModel in this.GetListTransData())
            {
                // Current not exists -> Insert translate data
                if (!dicCurrentTransEntity.ContainsKey(transRequestModel.Lang))
                {
                    var transEntity = new Example001TransRequestModel();
                    transEntity.BaseId = this.Id.Value;
                    entity.ListExample001Trans.Add(transRequestModel.GetEntity(new Example001TransEntity()));
                }

                // Current exists -> Update translate data
                else
                {
                    var currentTransEntity = dicCurrentTransEntity[transRequestModel.Lang];
                    currentTransEntity = transRequestModel.GetEntity(currentTransEntity);
                }
            }

            return entityRS;
        }
    }
}
